<?xml version="1.0" encoding="utf-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms" xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" xmlns:local="clr-namespace:XamarinFormsAnimationSample" xmlns:trigger="clr-namespace:XamarinFormsAnimationSample.Triggers" x:Class="XamarinFormsAnimationSample.MainPage" xmlns:ios="clr-namespace:Xamarin.Forms.PlatformConfiguration.iOSSpecific;assembly=Xamarin.Forms.Core" ios:Page.UseSafeArea="true">
	<ContentPage.BindingContext>
		<local:MainPageViewModel/>
	</ContentPage.BindingContext>
	<StackLayout BackgroundColor="Silver" Spacing="0">
		<StackLayout.Triggers>
			<DataTrigger TargetType="StackLayout" Binding="{Binding Path=m_GoAnimation}" Value="True">
				<DataTrigger.EnterActions>
					<trigger:StackLayoutSpacingDoubleAnimation To="10"/>
				</DataTrigger.EnterActions>
				<DataTrigger.ExitActions>
					<trigger:StackLayoutSpacingDoubleAnimation To="0"/>
				</DataTrigger.ExitActions>
			</DataTrigger>
		</StackLayout.Triggers>
		<Button Text="Go!" Command="{Binding GoAnimationCommand}" BorderColor="Black" BorderWidth="2" FontSize="20" TextColor="Black" Margin="5">
			<Button.Triggers>
				<DataTrigger TargetType="Button" Binding="{Binding Path=m_GoAnimation}" Value="True">
					<DataTrigger.EnterActions>
						<trigger:ButtonBorderColorAnimation To="Green"/>
						<trigger:ButtonBorderWidthDoubleAnimation To="4"/>
						<trigger:ButtonFontSizeDoubleAnimation To="30"/>
						<trigger:ButtonTextColorAnimation To="Fuchsia"/>
					</DataTrigger.EnterActions>
					<DataTrigger.ExitActions>
						<trigger:ButtonBorderColorAnimation To="Black"/>
						<trigger:ButtonBorderWidthDoubleAnimation To="2"/>
						<trigger:ButtonFontSizeDoubleAnimation To="20"/>
						<trigger:ButtonTextColorAnimation To="Black"/>
					</DataTrigger.ExitActions>
				</DataTrigger>				
			</Button.Triggers>
		</Button>
		<Label Text="text" LineHeight="0.5" TextColor="Black" FontSize="20">
			<Label.Triggers>
				<DataTrigger TargetType="Label" Binding="{Binding Path=m_GoAnimation}" Value="True">
					<DataTrigger.EnterActions>
						<trigger:LabelTextColorAnimation To="Blue"/>
						<trigger:LabelFontSizeDoubleAnimation To="30"/>
						<trigger:LabelLineHeightDoubleAnimation To="1"/>
					</DataTrigger.EnterActions>
					<DataTrigger.ExitActions>
						<trigger:LabelTextColorAnimation To="Black"/>
						<trigger:LabelFontSizeDoubleAnimation To="20"/>
						<trigger:LabelLineHeightDoubleAnimation To="0.5"/>						
					</DataTrigger.ExitActions>
				</DataTrigger>
			</Label.Triggers>
		</Label>
		<Frame BorderColor="Lime">
			<Frame.Triggers>
				<DataTrigger TargetType="Frame" Binding="{Binding Path=m_GoAnimation}" Value="True">
					<DataTrigger.EnterActions>
						<trigger:FrameBorderColorAnimation To="Blue"/>
					</DataTrigger.EnterActions>
					<DataTrigger.ExitActions>
						<trigger:FrameBorderColorAnimation To="Black"/>
					</DataTrigger.ExitActions>
				</DataTrigger>
			</Frame.Triggers>
		</Frame>
		<ListView ItemsSource="{Binding m_PickerItems,Mode=OneWay,UpdateSourceEventName=PropertyChanged}" SeparatorColor="Black" RowHeight="10">
			<ListView.Triggers>
				<DataTrigger TargetType="ListView" Binding="{Binding Path=m_GoAnimation}" Value="True">
					<DataTrigger.EnterActions>
						<trigger:ListViewSeparatorColorAnimation To="Red"/>
						<trigger:ListViewRowHeightDoubleAnimation To="20"/>
					</DataTrigger.EnterActions>
					<DataTrigger.ExitActions>
						<trigger:ListViewSeparatorColorAnimation To="Black"/>
						<trigger:ListViewRowHeightDoubleAnimation To="10"/>						
					</DataTrigger.ExitActions>
				</DataTrigger>
			</ListView.Triggers>
		</ListView>
		<Entry FontSize="20" TextColor="Black" PlaceholderColor="Blue" Placeholder="placeholder">
			<Entry.Triggers>
				<DataTrigger TargetType="Entry" Binding="{Binding Path=m_GoAnimation}" Value="True">
					<DataTrigger.EnterActions>
						<trigger:EntryTextColorAnimation To="Fuchsia"/>
						<trigger:EntryFontSizeDoubleAnimation To="40"/>
						<trigger:EntryPlaceholderColorAnimation To="Green"/>
					</DataTrigger.EnterActions>
					<DataTrigger.ExitActions>
						<trigger:EntryTextColorAnimation To="Black"/>
						<trigger:EntryFontSizeDoubleAnimation To="20"/>
						<trigger:EntryPlaceholderColorAnimation To="Blue"/>						
					</DataTrigger.ExitActions>
				</DataTrigger>
			</Entry.Triggers>
		</Entry>
		<Editor FontSize="20" TextColor="Black" Text="test">
			<Editor.Triggers>
				<DataTrigger TargetType="Editor" Binding="{Binding Path=m_GoAnimation}" Value="True">
					<DataTrigger.EnterActions>
						<trigger:EditorTextColorAnimation To="Blue"/>
						<trigger:EditorFontSizeDoubleAnimation To="40"/>
					</DataTrigger.EnterActions>
					<DataTrigger.ExitActions>
						<trigger:EditorTextColorAnimation To="Black"/>
						<trigger:EditorFontSizeDoubleAnimation To="20"/>
					</DataTrigger.ExitActions>
				</DataTrigger>
			</Editor.Triggers>
		</Editor>
		<TimePicker FontSize="20" TextColor="Black">
			<TimePicker.Triggers>
				<DataTrigger TargetType="TimePicker" Binding="{Binding Path=m_GoAnimation}" Value="True">
					<DataTrigger.EnterActions>
						<trigger:TimePickerTextColorAnimation To="Blue"/>
						<trigger:TimePickerFontSizeDoubleAnimation To="40"/>
					</DataTrigger.EnterActions>
					<DataTrigger.ExitActions>
						<trigger:TimePickerTextColorAnimation To="Black"/>
						<trigger:TimePickerFontSizeDoubleAnimation To="20"/>						
					</DataTrigger.ExitActions>
				</DataTrigger>
			</TimePicker.Triggers>
		</TimePicker>
		<TableView RowHeight="20" HasUnevenRows="false">
			<TableView.Triggers>
				<DataTrigger TargetType="TableView" Binding="{Binding Path=m_GoAnimation}" Value="True">
					<DataTrigger.EnterActions>
						<trigger:TableViewRowHeightIntAnimation To="40"/>
					</DataTrigger.EnterActions>
					<DataTrigger.ExitActions>
						<trigger:TableViewRowHeightIntAnimation To="20"/>
					</DataTrigger.ExitActions>
				</DataTrigger>
			</TableView.Triggers>
			<TableView.Root>
				<TableRoot>
					<TableSection Title="section1">
						<EntryCell Text="aaa"/>
						<SwitchCell Text="switch1"/>
					</TableSection>
				</TableRoot>
			</TableView.Root>
		</TableView>
		<ProgressBar ProgressColor="Black" Progress="0.3" HeightRequest="5">
			<ProgressBar.Triggers>
				<DataTrigger TargetType="ProgressBar" Binding="{Binding Path=m_GoAnimation}" Value="True">
					<DataTrigger.EnterActions>
						<trigger:ProgressBarColorAnimation To="Red"/>
					</DataTrigger.EnterActions>
					<DataTrigger.ExitActions>
						<trigger:ProgressBarColorAnimation To="Black"/>
					</DataTrigger.ExitActions>
				</DataTrigger>
			</ProgressBar.Triggers>
		</ProgressBar>
		<Picker TextColor="Black" FontSize="10" Title="Picker" ItemsSource="{Binding m_PickerItems,Mode=OneWay,UpdateSourceEventName=PropertyChanged}">
			<Picker.Triggers>
				<DataTrigger TargetType="Picker" Binding="{Binding Path=m_GoAnimation}" Value="True">
					<DataTrigger.EnterActions>
						<trigger:PickerTextColorAnimation To="Lime"/>
						<trigger:PickerFontSizeDoubleAnimation To="30"/>
					</DataTrigger.EnterActions>
					<DataTrigger.ExitActions>
						<trigger:PickerTextColorAnimation To="Black"/>
						<trigger:PickerFontSizeDoubleAnimation To="10"/>						
					</DataTrigger.ExitActions>
				</DataTrigger>
			</Picker.Triggers>
		</Picker>
		<Grid ColumnSpacing="5" RowSpacing="5" Padding="0">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="1*"/>
				<ColumnDefinition Width="1*"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="1*"/>
				<RowDefinition Height="1*"/>
			</Grid.RowDefinitions>
			<Grid.Triggers>
				<DataTrigger TargetType="Grid" Binding="{Binding Path=m_GoAnimation}" Value="True">
					<DataTrigger.EnterActions>
						<trigger:LayoutPaddingThicknessAnimation To="10"/>
						<trigger:GridRowSpacingDoubleAnimation To="10"/>
						<trigger:GridColumnSpacingDoubleAnimation To="10"/>
					</DataTrigger.EnterActions>
					<DataTrigger.ExitActions>
						<trigger:LayoutPaddingThicknessAnimation To="0"/>
						<trigger:GridRowSpacingDoubleAnimation To="5"/>
						<trigger:GridColumnSpacingDoubleAnimation To="5"/>
					</DataTrigger.ExitActions>
				</DataTrigger>
			</Grid.Triggers>
			<BoxView Grid.Row="1" Grid.Column="1" Color="Gray"/>
			<BoxView Grid.Row="1" Grid.Column="2" Color="Gray"/>
			<BoxView Grid.Row="2" Grid.Column="1" Color="Gray"/>
			<BoxView Grid.Row="2" Grid.Column="2" Color="Gray"/>
		</Grid>
		<DatePicker FontSize="20" TextColor="Black">
			<DatePicker.Triggers>
				<DataTrigger TargetType="DatePicker" Binding="{Binding Path=m_GoAnimation}" Value="True">
					<DataTrigger.EnterActions>
						<trigger:DatePickerTextColorAnimation To="Blue"/>
						<trigger:DatePickerFontSizeDoubleAnimation To="30"/>
					</DataTrigger.EnterActions>
				</DataTrigger>
			</DatePicker.Triggers>
		</DatePicker>
		<BoxView Color="Black" CornerRadius="5">
			<BoxView.Triggers>
				<DataTrigger TargetType="BoxView" Binding="{Binding Path=m_GoAnimation}" Value="True">
					<DataTrigger.EnterActions>
						<trigger:BoxViewColorAnimation To="Red"/>
						<trigger:BoxViewCornerRadiusAnimation To="30"/>
					</DataTrigger.EnterActions>
					<DataTrigger.ExitActions>
						<trigger:BoxViewColorAnimation To="Black"/>
						<trigger:BoxViewCornerRadiusAnimation To="5"/>
					</DataTrigger.ExitActions>
				</DataTrigger>
			</BoxView.Triggers>
		</BoxView>
		<StackLayout Orientation="Horizontal">
		<ActivityIndicator Color="Black" >
			<ActivityIndicator.Triggers>
					<DataTrigger TargetType="ActivityIndicator" Binding="{Binding Path=m_IndicatorProgressing}" Value="true">
						<Setter Property="IsRunning" Value="True"/>
						<DataTrigger.EnterActions>
							<trigger:ActivityIndicatorColorAnimation To="Red"/>
						</DataTrigger.EnterActions>
					</DataTrigger>
			</ActivityIndicator.Triggers>
		</ActivityIndicator>
			<Button Command="{Binding StartChangeActivityIndicatorColorAnimationCommand}" Text="Indicator Color"/>
		</StackLayout>
		<Entry Placeholder="Margin" Margin="10">
			<Entry.Triggers>
				<Trigger TargetType="Entry" Property="Entry.IsFocused" Value="True">
					<Trigger.EnterActions>
						<trigger:MarginThicknessAnimation To="20"/>
					</Trigger.EnterActions>
					<Trigger.ExitActions>
						<trigger:WidthRequestDoubleAnimation To="10"/>
					</Trigger.ExitActions>
				</Trigger>
			</Entry.Triggers>
		</Entry>
		<Entry Placeholder="test" BackgroundColor="Olive">
			<Entry.Triggers>
				<Trigger TargetType="Entry" Property="Entry.IsFocused" Value="True">
					<Trigger.EnterActions>
						<trigger:BackgroundColorAnimation To="Blue"/>
<!--						<trigger:OpacityDoubleAnimation To="0"/>-->
<!--						<trigger:HeightRequestDoubleAnimation To="100"/>-->
					</Trigger.EnterActions>
					<Trigger.ExitActions>
						<trigger:BackgroundColorAnimation To="Olive"/>
<!--						<trigger:OpacityDoubleAnimation To="1"/>-->
<!--						<trigger:HeightRequestDoubleAnimation To="50"/>-->
					</Trigger.ExitActions>
				</Trigger>
			</Entry.Triggers>
		</Entry>
		<Label Text="Welcome to Xamarin.Forms!" x:Name="testLabel" TextColor="Black" BackgroundColor="Gray" HorizontalOptions="Center" VerticalOptions="CenterAndExpand" FontSize="15">
			<Label.Triggers>
				<DataTrigger TargetType="Label" Binding="{Binding Path=m_IsChangeBackgroundColorAminationStart}" Value="true">
					<DataTrigger.EnterActions>
						<trigger:BackgroundColorAnimation To="Green"/>
<!--						<trigger:WidthRequestDoubleAnimation To="100"/>
						<trigger:MarginThicknessAnimation To="10,10,10,10"/>
-->					</DataTrigger.EnterActions>
					<DataTrigger.ExitActions>
						<trigger:BackgroundColorAnimation To="Gray"/>
					</DataTrigger.ExitActions>
				</DataTrigger>  
				<DataTrigger TargetType="Label" Binding="{Binding Path=m_IsChangeFontSizeAnimationStart}" Value="true">
					<DataTrigger.EnterActions>
<!--						<trigger:LabelFontSizeDoubleAnimation To="20" />-->
						<trigger:LabelTextColorAnimation To="Lime"/>
					</DataTrigger.EnterActions>
					<DataTrigger.ExitActions>
<!--						<trigger:LabelFontSizeDoubleAnimation To="15"/>-->
						<trigger:LabelTextColorAnimation To="Black"/>
					</DataTrigger.ExitActions>
				</DataTrigger>
<!--				<DataTrigger TargetType="Label" Binding="{Binding Path=m_IsChangeFontSizeAnimationStart}" Value="false">
					<DataTrigger.EnterActions>
						<trigger:LabelFontSizeDoubleAnimation To="15"/>
						<trigger:LabelTextColorAnimation To="Black"/>
					</DataTrigger.EnterActions>
				</DataTrigger>
-->			</Label.Triggers>
		</Label>
		<Button Command="{Binding StartChangeBackgroundColorAnimationCommand}" Text="Change BackgroundColor"/>
		<Button Command="{Binding StartChangeFontSizeAnimationCommand}" Text="Change FontSize"/>
	</StackLayout>
</ContentPage>